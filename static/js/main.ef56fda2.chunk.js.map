{"version":3,"sources":["reducers/tasks.js","actions/tasks.js","containers/TodoApp.js","components/TodoApp.js","index.js"],"names":["initialState","task","tasks","inputTask","type","payload","addTask","console","log","connect","dispatch","position","variant","color","style","padding","onChange","e","target","value","onClick","transitionName","transitionEnterTimeout","map","item","i","key","primary","store","createStore","state","action","concat","render","document","getElementById"],"mappings":"gvBAAA,IAAMA,EAAe,CACjBC,KAAM,GACNC,MAAO,IAoBJ,I,gLCtBA,IAAMC,EAAY,SAACF,GAAD,MAAW,CAChCG,KAAM,aACNC,QAAS,CACLJ,UAIKK,EAAU,SAACL,GAAD,MAAW,CAC9BG,KAAM,WACNC,QAAS,CACLJ,UAGRM,QAAQC,IAAI,sBCUGC,mBAlBf,YACI,MAAO,CACHR,KAFgC,EAAdA,KAGlBC,MAHgC,EAARA,UAOhC,SAA4BQ,GACxB,MAAO,CACHJ,QADG,SACKL,GACJS,EAASJ,EAAQL,KAErBE,UAJG,SAIOF,GACNS,EAASP,EAAUF,QAKhBQ,ECVA,YAAqD,IAAnCR,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,UAAWG,EAAU,EAAVA,QACrD,OACI,6BACI,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQK,SAAS,UACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,WAAlC,gBAKR,yBAAKC,MAAO,CAACC,QAAS,SAClB,kBAAC,IAAD,CAAOX,KAAK,OAAOY,SAAU,SAACC,GAAD,OAAOd,EAAUc,EAAEC,OAAOC,UACvD,kBAAC,IAAD,CAAQP,QAAQ,YAAYC,MAAM,YAAYO,QAAS,kBAAMd,EAAQL,KAArE,OACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAwBoB,eAAe,UAAUC,uBAAwB,KAEjEpB,EAAMqB,KAAI,SAASC,EAAMC,GACrB,OACI,kBAAC,IAAD,CAAUC,IAAKD,GACX,kBAAC,IAAD,CAAcE,QAAS,KAAOH,eC1BhEI,EAAQC,aJFC,WAAqD,IAA/BC,EAA8B,uDAAtB9B,EAAc+B,EAAQ,uCAC/D,OAAOA,EAAO3B,MACV,IAAK,aACD,OAAO,EAAP,GACO0B,EADP,CAEI7B,KAAM8B,EAAO1B,QAAQJ,OAE7B,IAAK,WACD,OAAO,EAAP,GACO6B,EADP,CAEI5B,MAAO4B,EAAM5B,MAAM8B,OAAO,CAACD,EAAO1B,QAAQJ,SAElD,QACI,OAAO6B,MITnBG,iBACI,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEJM,SAASC,eAAe,U","file":"static/js/main.ef56fda2.chunk.js","sourcesContent":["const initialState = {\r\n    task: '',\r\n    tasks: []\r\n};\r\n\r\nexport default function tasksReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'INPUT_TASK':\r\n            return {\r\n                ...state,\r\n                task: action.payload.task\r\n            }\r\n        case 'ADD_TASK':\r\n            return {\r\n                ...state,\r\n                tasks: state.tasks.concat([action.payload.task])\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const inputTask = (task) => ({\r\n    type: 'INPUT_TASK',\r\n    payload: {\r\n        task\r\n    }\r\n});\r\n\r\nexport const addTask = (task) => ({\r\n    type: 'ADD_TASK',\r\n    payload: {\r\n        task\r\n    }\r\n});","export const inputTask = (task) => ({\r\n    type: 'INPUT_TASK',\r\n    payload: {\r\n        task\r\n    }\r\n});\r\n\r\nexport const addTask = (task) => ({\r\n    type: 'ADD_TASK',\r\n    payload: {\r\n        task\r\n    }\r\n});\r\nconsole.log(\"input and add Task\");\r\n","import { connect } from 'react-redux';\r\nimport TodoApp from '../components/TodoApp';\r\nimport {inputTask, addTask} from '../actions/tasks';\r\n\r\n\r\nfunction mapStateToProps({task, tasks}) {\r\n    return {\r\n        task,\r\n        tasks\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        addTask(task) {\r\n            dispatch(addTask(task));\r\n        },\r\n        inputTask(task) {\r\n            dispatch(inputTask(task));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoApp);","import React from 'react';\r\nimport CssBaseLine from '@material-ui/core/CssBaseline'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ReactCSSTranstionGroup from 'react-addons-css-transition-group';\r\nimport './TodoApp.css';\r\n\r\nexport default function TodoApp({task, tasks, inputTask, addTask}) {\r\n    return (\r\n        <div>\r\n            <CssBaseLine />\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"title\" color=\"inherit\">\r\n                        To-do List\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div style={{padding: '16px'}}>\r\n                <Input type=\"text\" onChange={(e) => inputTask(e.target.value)} />\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => addTask(task)}>add</Button>\r\n                <List>\r\n                    <ReactCSSTranstionGroup transitionName=\"example\" transitionEnterTimeout={300}>\r\n                        {\r\n                            tasks.map(function(item, i) {\r\n                                return (\r\n                                    <ListItem key={i}>\r\n                                        <ListItemText primary={'- ' + item} />\r\n                                    </ListItem>\r\n                                );\r\n                            })\r\n                        }\r\n                    </ReactCSSTranstionGroup>\r\n                </List>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { render } from 'react-dom';\nimport tasksReducer from './reducers/tasks';\nimport TodoApp from './containers/TodoApp';\n\nconst store = createStore(tasksReducer);\n\nrender( \n    <Provider store={store}>\n        <TodoApp />\n    </Provider>, \n    document.getElementById('root')\n);"],"sourceRoot":""}